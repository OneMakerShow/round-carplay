name: build

on:
  workflow_run:
    workflows: ["typecheck"]
    branches: [main, dev]
    types: [completed]

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'

jobs:
  build:
    name: Build ${{ matrix.artifact_ext }} (${{ matrix.platform }}) on ${{ github.event.inputs.branch || github.event.workflow_run.head_branch || github.ref_name }}
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: x86_64
            os: ubuntu-latest
            arch: native
            artifact_ext: AppImage
          - platform: arm64
            os: ubuntu-latest
            arch: emulated
            artifact_ext: AppImage
          - platform: darwin
            os: macos-latest
            arch: native
            artifact_ext: dmg

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch && format('refs/heads/{0}', github.event.inputs.branch) || format('refs/heads/{0}', github.event.workflow_run.head_branch) }}

      - name: Read version from package.json
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build for x86_64 (native Ubuntu)
        if: matrix.platform == 'x86_64'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 python3-dev libusb-1.0-0-dev libudev-dev pkg-config libusb-1.0-0 libudev1
          npm run install:clean
          npx electron-rebuild -f
          npm run typecheck
          npm run build
          npm run build:linux

      - name: Build for ARM64 (emulated)
        if: matrix.platform == 'arm64'
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            apt-get update
            apt-get install -y curl git
            curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
            apt-get install -y nodejs build-essential python3 python3-dev libusb-1.0-0-dev libudev-dev pkg-config libusb-1.0-0 libudev1
            echo "==> Waiting for file system to settle (QEMU workaround)..."
            sleep 5
            npm run install:clean
            npx electron-rebuild -f
            npm run typecheck
            npm run build
            npm run build:armLinux
            mkdir -p /github/workspace/dist/
            cp dist/*-arm64.AppImage /github/workspace/dist/

      - name: Build for macOS (native)
        if: matrix.platform == 'darwin'
        run: |
          brew update
          brew install libusb pkg-config
          npm run install:clean
          npx electron-rebuild -f
          npm run typecheck
          npm run build
          npm run build:mac

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pi-carplay-${{ steps.pkg.outputs.version }}-${{ matrix.platform }}.${{ matrix.artifact_ext }}
          path: |
            dist/*${{ matrix.artifact_ext == 'dmg' && 'arm64.dmg' || (matrix.artifact_ext == 'AppImage' && (matrix.platform == 'arm64' && 'arm64.AppImage' || 'x86_64.AppImage')) }}
          retention-days: 10

  cleanup_old_runs:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 10
          keep_minimum_runs: 5
